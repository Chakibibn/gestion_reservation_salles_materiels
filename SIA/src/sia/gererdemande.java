/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sia;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Winsido
 */
public class gererdemande extends javax.swing.JFrame {

    SeConnecter c = new SeConnecter();
    DefaultTableModel model = new DefaultTableModel();
    modifieretatdemande modi;
    consulterdem cons;
    String iduser;
    ResultSet rs, rs1, rs2,rs4;
    Statement st;
    int y=0;
    String d="1111-11-11";
    String n,p;
    int t;

    /**
     * Creates new form gererdemande
     */
    
        
    public gererdemande(String n,String p , int t) {
        initComponents();
        this.setSize(1340, 820);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.n=n;
        this.p=p;
        this.t=t;
        
      

        try {
            st = c.obtenirCon().createStatement();
            rs = st.executeQuery("SELECT*from demande");

            // while(rs.next()){model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6)});}
            // jTable1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur Séléction", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    private gererdemande() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ajouter = new javax.swing.JLabel();
        ajouter1 = new javax.swing.JLabel();
        ajouter2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        t6 = new javax.swing.JTextField();
        t1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        t5 = new javax.swing.JTextField();
        c4 = new javax.swing.JCheckBox();
        c2 = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        f = new javax.swing.JTextArea();
        c1 = new javax.swing.JCheckBox();
        c3 = new javax.swing.JCheckBox();
        t3 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        d4 = new com.toedter.calendar.JDateChooser();
        d1 = new com.toedter.calendar.JDateChooser();
        d2 = new com.toedter.calendar.JDateChooser();
        d3 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        t4 = new javax.swing.JTextField();
        i = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        t7 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 94, 166));
        jPanel2.setLayout(null);

        ajouter.setFont(new java.awt.Font("Impact", 2, 18)); // NOI18N
        ajouter.setForeground(new java.awt.Color(255, 255, 255));
        ajouter.setText("Annuler la demande");
        ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ajouterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ajouterMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ajouterMousePressed(evt);
            }
        });
        jPanel2.add(ajouter);
        ajouter.setBounds(0, 380, 220, 40);

        ajouter1.setFont(new java.awt.Font("Impact", 2, 18)); // NOI18N
        ajouter1.setForeground(new java.awt.Color(255, 255, 255));
        ajouter1.setText("Faire une nouvelle demande");
        ajouter1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ajouter1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ajouter1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ajouter1MousePressed(evt);
            }
        });
        jPanel2.add(ajouter1);
        ajouter1.setBounds(0, 300, 220, 40);

        ajouter2.setFont(new java.awt.Font("Impact", 2, 18)); // NOI18N
        ajouter2.setForeground(new java.awt.Color(255, 255, 255));
        ajouter2.setText("Consulter Reservation");
        ajouter2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ajouter2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ajouter2MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ajouter2MousePressed(evt);
            }
        });
        jPanel2.add(ajouter2);
        ajouter2.setBounds(0, 450, 220, 40);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 220, 820);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sia/edubase.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(530, 0, 490, 147);

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel2.setText("Email");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(680, 200, 90, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel3.setText("Fondement :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(230, 500, 90, 30);

        t6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jPanel1.add(t6);
        t6.setBounds(750, 200, 200, 40);

        t1.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jPanel1.add(t1);
        t1.setBounds(330, 300, 80, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel4.setText("prenom");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(450, 200, 90, 30);

        t5.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jPanel1.add(t5);
        t5.setBounds(530, 200, 150, 40);

        c4.setText("DataShow");
        c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c4ActionPerformed(evt);
            }
        });
        jPanel1.add(c4);
        c4.setBounds(1030, 290, 93, 25);

        c2.setText("MATERIEL");
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });
        jPanel1.add(c2);
        c2.setBounds(1110, 210, 110, 25);

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel5.setText("Nom ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(220, 200, 90, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel6.setText("Quelle Materiel  :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(790, 290, 110, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel7.setText("Date Debut  : ");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(800, 360, 90, 30);

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel8.setText("Date Fin :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(810, 420, 90, 30);

        f.setColumns(20);
        f.setRows(5);
        jScrollPane1.setViewportView(f);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(250, 540, 1010, 170);

        c1.setText("SALLE");
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        jPanel1.add(c1);
        c1.setBounds(1010, 210, 93, 25);

        c3.setText("PC");
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });
        jPanel1.add(c3);
        c3.setBounds(920, 290, 60, 25);
        jPanel1.add(t3);
        t3.setBounds(1130, 290, 30, 22);
        jPanel1.add(t2);
        t2.setBounds(990, 290, 30, 22);

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel9.setText("Nbr participant :");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(450, 300, 110, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel10.setText("Date Debut  : ");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(230, 360, 90, 30);

        jLabel11.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel11.setText("Date Fin :");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(230, 430, 90, 30);
        jPanel1.add(d4);
        d4.setBounds(920, 420, 170, 30);
        jPanel1.add(d1);
        d1.setBounds(340, 360, 170, 30);
        jPanel1.add(d2);
        d2.setBounds(340, 430, 170, 30);
        jPanel1.add(d3);
        d3.setBounds(920, 360, 170, 30);

        jButton1.setBackground(new java.awt.Color(0, 94, 166));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Valider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1220, 210, 100, 40);

        t4.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jPanel1.add(t4);
        t4.setBounds(290, 200, 150, 40);

        i.setEditable(false);
        jPanel1.add(i);
        i.setBounds(960, 202, 40, 40);

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel12.setText("Quelle Salle  :");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(230, 300, 90, 30);

        t7.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jPanel1.add(t7);
        t7.setBounds(560, 300, 80, 30);

        jMenu1.setText("Log out");

        jMenuItem1.setText("Déconnexion");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Quitté");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("page Menu");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1345, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        /* if(c1.isSelected() ){d1.setEnabled(true);
        t1.enable(true);
        d2.setEnabled(true);
        d3.setEnabled(false);
        d4.setEnabled(false);
        t2.enable(false);
        t3.enable(false);
        c3.setEnabled(false);
        c4.setEnabled(false);}
        else { if(c2.isSelected() && c1.isSelected()==true){
            t1.enable(true);
        d1.setEnabled(true);
        d2.setEnabled(true);
        d3.setEnabled(true);
        d4.setEnabled(true);
        t2.enable(true);
        t3.enable(true);
        c3.setEnabled(true);
        c4.setEnabled(true);
        }
        if(c2.isSelected()==false && c1.isSelected()==false){
            t1.enable(true);
        d1.setEnabled(true);
        d2.setEnabled(true);
        d3.setEnabled(true);
        d4.setEnabled(true);
        t2.enable(true);
        t3.enable(true);
        c3.setEnabled(true);
        c4.setEnabled(true);
        }
        }*/
        if (c1.isSelected() && c2.isSelected()) {
            t1.enable(true);
            t7.enable(true);
            d1.setEnabled(true);
            d2.setEnabled(true);
            d3.setEnabled(true);
            d4.setEnabled(true);
            t2.enable(true);
            t3.enable(true);
            c3.setEnabled(true);
            c4.setEnabled(true);
        } else {
            if (c1.isSelected() && c2.isSelected() == false) {
                d1.setEnabled(true);
                t1.enable(true);t7.enable(true);
                d2.setEnabled(true);
                d3.setEnabled(false);
                d4.setEnabled(false);
                t2.enable(false);
                t3.enable(false);
                c3.setEnabled(false);
                c4.setEnabled(false);
            }

        }
    }//GEN-LAST:event_c1ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
        /* if(c2.isSelected() && c1.isSelected()==false){d1.setEnabled(false);
        t1.enable(false);
        d2.setEnabled(false);
        d3.setEnabled(true);
        d4.setEnabled(true);
        t2.enable(true);
        t3.enable(true);
        c3.setEnabled(true);
        c4.setEnabled(true);}
        else { if(c2.isSelected() && c1.isSelected()==true){
            t1.enable(true);
        d1.setEnabled(true);
        d2.setEnabled(true);
        d3.setEnabled(true);
        d4.setEnabled(true);
        t2.enable(true);
        t3.enable(true);
        c3.setEnabled(true);
        c4.setEnabled(true);
        }
        }
        if(c2.isSelected()==false && c1.isSelected()==false){
            t1.enable(true);
        d1.setEnabled(true);
        d2.setEnabled(true);
        d3.setEnabled(true);
        d4.setEnabled(true);
        t2.enable(true);
        t3.enable(true);
        c3.setEnabled(true);
        c4.setEnabled(true);
        }*/
        if (c1.isSelected() && c2.isSelected()) {
            t1.enable(true); t7.enable(true);
            d1.setEnabled(true);
            d2.setEnabled(true);
            d3.setEnabled(true);
            d4.setEnabled(true);
            t2.enable(true);
            t3.enable(true);
            c3.setEnabled(true);
            c4.setEnabled(true);
        } else {
            if (c1.isSelected() == false && c2.isSelected()) {
                d1.setEnabled(false);
                t1.enable(false);
                t7.enable(false);
                d2.setEnabled(false);
                d3.setEnabled(true);
                d4.setEnabled(true);
                t2.enable(true);
                t3.enable(true);
                c3.setEnabled(true);
                c4.setEnabled(true);
                
            }

        }
    }//GEN-LAST:event_c2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            //int zz=Integer.parseInt(t7.getText());
            if(c1.isSelected() && c2.isSelected()){
             SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
                    String datea=sdf.format(d1.getDate());//datedebs
                    System.out.println("datea"+datea);
                    String datef=sdf.format(d2.getDate());//datefins
                    System.out.println("datef"+datef);
                     String datea1=sdf.format(d3.getDate());//datedem
                     System.out.println("datea1"+datea1);
                    String datef1=sdf.format(d4.getDate());//datefinm
                    rs4=st.executeQuery("select idindividu from individu where nomind='"+t4.getText()+"' and prenomind='"+t5.getText()+"'");
             
                 int j=Integer.parseInt(i.getText());//idindividu
                    int nd=Integer.parseInt(t3.getText());//nbrdatashow
                    int np=Integer.parseInt(t2.getText());//nbrpc
                    int k=Integer.parseInt(t1.getText());//num salle 
                    int zz=Integer.parseInt(t7.getText());
                    String x=t6.getText();//em
                    String dis=f.getText();//discription
                   int a=102; // iddem
             int  m =1;
             int id=0;
             
                String idd="";
                rs1=st.executeQuery("select Max(iddem) from demande");
                while(rs1.next()){
                idd=rs1.getString(1);
                }
                id=Integer.parseInt(idd)+1;
                 String y1="",y2="",m1="",m2="",j1="",j2="";
                    for(int l=0;l<4;l++){
                        y1=y1+datea.charAt(l);
                        y2=y2+datef.charAt(l); }
                    for(int l=5;l<7;l++){
                        m1=m1+datea.charAt(l);
                        m2=m2+datef.charAt(l); }
                    for(int l=8;l<10;l++){
                        j1=j1+datea.charAt(l);
                        j2=j2+datef.charAt(l); }
                    
                    System.out.println(""+y1);
                    System.out.println(""+y2);
                    System.out.println(""+m1);
                    System.out.println(""+m2);
                     System.out.println(""+j1);
                    System.out.println(""+j2);
                       int yy1 = Integer.parseInt(y1);
                       int yy2 = Integer.parseInt(y2);
                       int mm1 = Integer.parseInt(m1);
                       int mm2 = Integer.parseInt(m2);
                       int jj1 = Integer.parseInt(j1);
                       int jj2 = Integer.parseInt(j2);
                       
                       
                    String y11="",y12="",m11="",m12="",j11="",j12="";
                    for(int l=0;l<4;l++){
                        y11=y11+datea1.charAt(l);
                        y12=y12+datef1.charAt(l); }
                    for(int l=5;l<7;l++){
                        m11=m11+datea1.charAt(l);
                        m12=m12+datef1.charAt(l); }
                    for(int l=8;l<10;l++){
                        j11=j11+datea1.charAt(l);
                        j12=j12+datef1.charAt(l); }
                    
                    System.out.println(""+y11);
                    System.out.println(""+y12);
                    System.out.println(""+m11);
                    System.out.println(""+m12);
                     System.out.println(""+j11);
                    System.out.println(""+j12);
                       int yy11 = Integer.parseInt(y11);
                       int yy12 = Integer.parseInt(y12);
                       int mm11 = Integer.parseInt(m11);
                       int mm12 = Integer.parseInt(m12);
                       int jj11 = Integer.parseInt(j11);
                       int jj12 = Integer.parseInt(j12);   
                      //yy1 yy2 mm1 mm2 jj1 jj2 yy11 yy12 mm11 mm12 jj11 jj12
                      if((yy1>yy2) || (yy11>yy12)){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       else {
                       if((yy1==yy2) && (yy11==yy12) ){
                           if((mm1==mm2) && (mm11==mm12)){
                           if((jj1>jj2) || (jj11>jj12)){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else {
                              String req1 ="insert into demande VALUES ("+id+" , "+k+" , '"+datea+"' , '"+datef+"' , "+nd+" , "+np+" , '"+datea1+"' , '"+datef1+"' , "+j+" , '"+x+"' , '"+dis+"',"+m+ ","+zz+")";

                        st.executeUpdate(req1);
                           JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}
                           
                           
                           
                           } else
                           { if((mm1>mm2) || (mm11>mm12)){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else 
                           {
                            String req1 ="insert into demande VALUES ("+id+" , "+k+" , '"+datea+"' , '"+datef+"' , "+nd+" , "+np+" , '"+datea1+"' , '"+datef1+"' , "+j+" , '"+x+"' , '"+dis+"',"+m+ ","+zz+"))";

                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}}
                       } else {
                       if((mm1>mm2) || (mm11>mm12)) 
                       {JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       
                       
                       else {
                      String req1 ="insert into demande VALUES ("+id+" , "+k+" , '"+datea+"' , '"+datef+"' , "+nd+" , "+np+" , '"+datea1+"' , '"+datef1+"' , "+j+" , '"+x+"' , '"+dis+"',"+m+ ","+zz+")";

                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);
                       }
                       
                       
                       }
                    
                       }
                       
                       
                       
                       
            String req1 ="insert into demande VALUES ("+id+" , "+k+" , '"+datea+"' , '"+datef+"' , "+nd+" , "+np+" , '"+datea1+"' , '"+datef1+"' , "+j+" , '"+x+"' , '"+dis+"',"+m+ ","+zz+")";

             
            //st.executeUpdate(req1); 
            //JOptionPane.showMessageDialog(this, " Votre enregistrement a été fait");
            }
            else {if (c1.isSelected()) {
                
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String datea = sdf.format(d1.getDate());//datedebs
                System.out.println("datea" + datea);
                String datef = sdf.format(d2.getDate());//datefins
                System.out.println("datef" + datef);
                String datea1 = "null";//datedem
                System.out.println("datea1" + datea1);
                String datef1 = "null";//datefinm
                int j = Integer.parseInt(i.getText());//idindividu
                int nd = 0;//nbrdatashow
                int np = 0;//nbrpc
                int k = Integer.parseInt(t1.getText());//num salle 
                int zz=Integer.parseInt(t7.getText());
                String x = t6.getText();//em
                String dis = f.getText();//discription
                int a = 95; // iddem*/
                int m = 1;
                int id=0;
                String idd="";
                rs1=st.executeQuery("select Max(iddem) from demande");
                while(rs1.next()){
                idd=rs1.getString(1);
                }
                id=Integer.parseInt(idd)+1;
                String y1="",y2="",m1="",m2="",j1="",j2="";
                    for(int l=0;l<4;l++){
                        y1=y1+datea.charAt(l);
                        y2=y2+datef.charAt(l); }
                    for(int l=5;l<7;l++){
                        m1=m1+datea.charAt(l);
                        m2=m2+datef.charAt(l); }
                    for(int l=8;l<10;l++){
                        j1=j1+datea.charAt(l);
                        j2=j2+datef.charAt(l); }
                    
                    System.out.println(""+y1);
                    System.out.println(""+y2);
                    System.out.println(""+m1);
                    System.out.println(""+m2);
                     System.out.println(""+j1);
                    System.out.println(""+j2);
                       int yy1 = Integer.parseInt(y1);
                       int yy2 = Integer.parseInt(y2);
                       int mm1 = Integer.parseInt(m1);
                       int mm2 = Integer.parseInt(m2);
                       int jj1 = Integer.parseInt(j1);
                       int jj2 = Integer.parseInt(j2);
                       if(yy1>yy2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       else {
                       if(yy1==yy2){
                           if(mm1==mm2){
                           if(jj1>jj2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else {
                               String req1 = "insert into demande VALUES (" +id+ " , " + k + " , '" + datea + "' , '" + datef + "' , " + y + " , " + y + " , '" + d + "' , '" + d + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+zz+")";
                        st.executeUpdate(req1);
                           JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}
                           
                           
                           
                           } else
                           { if(mm1>mm2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else 
                           {
                               String req1 = "insert into demande VALUES (" +id+ " , " + k + " , '" + datea + "' , '" + datef + "' , " + y + " , " + y + " , '" + d + "' , '" + d + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+zz+")";
                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}}
                       } else {
                       if(mm1>mm2) 
                       {JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       
                       
                       else {
                      String req1 = "insert into demande VALUES (" +id+ " , " + k + " , '" + datea + "' , '" + datef + "' , " + y + " , " + y + " , '" + d + "' , '" + d + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+zz+"))";
                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);
                       }
                       
                       
                       }
                    
                       }
               
                
                
                
               

                //String req1 = "insert into demande VALUES (" +id+ " , " + k + " , '" + datea + "' , '" + datef + "' , " + null + " , " + null + " , " + null + " , " + null + " , " + j + " , '" + x + "' , '" + dis + "'," + m + ")";
                //String req2 = "INSERT INTO `demande`(`iddem`, `numsalle`, `datedebs`, `datefins`, `nbrdata`, `nbrpc`, `datedebm`, `datefinm`, `idindividu`, `email`, `dis`, `etat`) VALUES (59,100,\"2020-02-25\",\"2020-02-25\",0	,0,null,null,10,\"dfdfg\",\"hhh\",1)";

              //st.executeUpdate(req1);
                //JOptionPane.showMessageDialog(this, " Votre enregistrement a été fait");

            }
            else {
            if(c2.isSelected()){
                if(c1.isSelected()==false)
                if(c3.isSelected() && c4.isSelected()){
                 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                 String datea1 = sdf.format(d3.getDate());//datedem
                System.out.println("datea1" + datea1);
                String datef1 = sdf.format(d4.getDate());//datefinm
                int j = Integer.parseInt(i.getText());//idindividu
                
                //num salle 
                String x = t6.getText();//em
                String dis = f.getText();//discription
                int a = 95; // iddem*/
                int m = 1;
                int id=0;
                String idd="";
                rs1=st.executeQuery("select Max(iddem) from demande");
                while(rs1.next()){
                idd=rs1.getString(1);
                }
                id=Integer.parseInt(idd)+1;
               
                int nd = Integer.parseInt(t3.getText());//nbrdatashow
                int np = Integer.parseInt(t2.getText());//nbrpc
                 String y1="",y2="",m1="",m2="",j1="",j2="";
                    for(int l=0;l<4;l++){
                        y1=y1+datea1.charAt(l);
                        y2=y2+datef1.charAt(l); }
                    for(int l=5;l<7;l++){
                        m1=m1+datea1.charAt(l);
                        m2=m2+datef1.charAt(l); }
                    for(int l=8;l<10;l++){
                        j1=j1+datea1.charAt(l);
                        j2=j2+datef1.charAt(l); }
                    
                    System.out.println(""+y1);
                    System.out.println(""+y2);
                    System.out.println(""+m1);
                    System.out.println(""+m2);
                     System.out.println(""+j1);
                    System.out.println(""+j2);
                       int yy1 = Integer.parseInt(y1);
                       int yy2 = Integer.parseInt(y2);
                       int mm1 = Integer.parseInt(m1);
                       int mm2 = Integer.parseInt(m2);
                       int jj1 = Integer.parseInt(j1);
                       int jj2 = Integer.parseInt(j2);
                       if(yy1>yy2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       else {
                       if(yy1==yy2){
                           if(mm1==mm2){
                           if(jj1>jj2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else {String req1 = "insert into demande VALUES ("+id+" , "+y+" , '" + d + "' , '"+d+"' , "+nd +" , "+ np+" , '"+datea1+"' , '"+datef1+"' , "+ j+" ,'"+x+"' , '"+dis+"' , "+m+" , "+y+")";
                           
                           st.executeUpdate(req1);
                           JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}
                           
                           
                           
                           } else
                           { if(mm1>mm2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else 
                               //INSERT INTO demande VALUES (2,2,"2020-04-20","2020-04-20",1,1,"2020-04-20","2020-04-20",1,"eéé","jfhsk",1)
                           {//String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + nd + " , " + np+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + " ,"+y+")";
                           String req1 = "insert into demande VALUES ("+id+" , "+y+" , '" + d + "' , '"+d+"' , "+nd +" , "+ np+" , '"+datea1+"' , '"+datef1+"' , "+ j+" ,'"+x+"' , '"+dis+"' , "+m+" , "+y+")";
                           
                           st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}}
                       } else {
                       if(mm1>mm2) 
                       {JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       
                       
                       else {
                       //String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + nd + " , " + np+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+y+")";
                       String req1 = "insert into demande VALUES ("+id+" , "+y+" , '" + d + "' , '"+d+"' , "+nd +" , "+ np+" , '"+datea1+"' , '"+datef1+"' , "+ j+" ,'"+x+"' , '"+dis+"' , "+m+" , "+y+")";
                            
                       st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);
                       }
                       
                       
                       }
                    
                       }
               

               // String req1 = "insert into demande VALUES (" +id+ " , " + null + " , " + null + " , " + null + " , " + nd + " , " + np+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ")";
                //String req2 = "INSERT INTO `demande`(`iddem`, `numsalle`, `datedebs`, `datefins`, `nbrdata`, `nbrpc`, `datedebm`, `datefinm`, `idindividu`, `email`, `dis`, `etat`) VALUES (59,100,\"2020-02-25\",\"2020-02-25\",0	,0,null,null,10,\"dfdfg\",\"hhh\",1)";

              //st.executeUpdate(req1);
                }
                else {
                if(c3.isSelected() && c4.isSelected()==false){
                     SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                 String datea1 = sdf.format(d3.getDate());//datedem
                System.out.println("datea1" + datea1);
                String datef1 = sdf.format(d4.getDate());//datefinm
                int j = Integer.parseInt(i.getText());//idindividu
                
                //num salle 
                String x = t6.getText();//em
                String dis = f.getText();//discription
                int a = 95; // iddem*/
                int m = 1;
                int id=0;
                String idd="";
                rs1=st.executeQuery("select Max(iddem) from demande");
                while(rs1.next()){
                idd=rs1.getString(1);
                }
                id=Integer.parseInt(idd)+1;
               
                
                int np = Integer.parseInt(t2.getText());//nbrpc
                String y1="",y2="",m1="",m2="",j1="",j2="";
                    for(int l=0;l<4;l++){
                        y1=y1+datea1.charAt(l);
                        y2=y2+datef1.charAt(l); }
                    for(int l=5;l<7;l++){
                        m1=m1+datea1.charAt(l);
                        m2=m2+datef1.charAt(l); }
                    for(int l=8;l<10;l++){
                        j1=j1+datea1.charAt(l);
                        j2=j2+datef1.charAt(l); }
                    
                    System.out.println(""+y1);
                    System.out.println(""+y2);
                    System.out.println(""+m1);
                    System.out.println(""+m2);
                     System.out.println(""+j1);
                    System.out.println(""+j2);
                       int yy1 = Integer.parseInt(y1);
                       int yy2 = Integer.parseInt(y2);
                       int mm1 = Integer.parseInt(m1);
                       int mm2 = Integer.parseInt(m2);
                       int jj1 = Integer.parseInt(j1);
                       int jj2 = Integer.parseInt(j2);
                       if(yy1>yy2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       else {
                       if(yy1==yy2){
                           if(mm1==mm2){
                           if(jj1>jj2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else {
                              String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + y+ " , " + np+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+y+")";
             
                        st.executeUpdate(req1);
                           JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}
                           
                           
                           
                           } else
                           { if(mm1>mm2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else 
                           {
                               String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + y+ " , " + np+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m +","+y+")";
             
                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}}
                       } else {
                       if(mm1>mm2) 
                       {JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       
                       
                       else {
                    String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + y+ " , " + np+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+y+")";
             
                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);
                       }
                       
                       
                       }
                    
                       }
                       
                
               

                //String req1 = "insert into demande VALUES (" +id+ " , " + null + " , " + null + " , " + null + " , " + null+ " , " + np+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ")";
                //String req2 = "INSERT INTO `demande`(`iddem`, `numsalle`, `datedebs`, `datefins`, `nbrdata`, `nbrpc`, `datedebm`, `datefinm`, `idindividu`, `email`, `dis`, `etat`) VALUES (59,100,\"2020-02-25\",\"2020-02-25\",0	,0,null,null,10,\"dfdfg\",\"hhh\",1)";

              //st.executeUpdate(req1);
                //JOptionPane.showMessageDialog(this, " Votre enregistrement a été fait");
                
                }
                else {
                if(c4.isSelected() && c3.isSelected()==false){
                 SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                 String datea1 = sdf.format(d3.getDate());//datedem
                System.out.println("datea1" + datea1);
                String datef1 = sdf.format(d4.getDate());//datefinm
                int j = Integer.parseInt(i.getText());//idindividu
                
                //num salle 
                String x = t6.getText();//em
                String dis = f.getText();//discription
                int a = 95; // iddem*/
                int m = 1;
                int id=0;
                String idd="";
                rs1=st.executeQuery("select Max(iddem) from demande");
                while(rs1.next()){
                idd=rs1.getString(1);
                }
                id=Integer.parseInt(idd)+1;
               
                int nd = Integer.parseInt(t3.getText());//nbrdatashow
                String y1="",y2="",m1="",m2="",j1="",j2="";
                    for(int l=0;l<4;l++){
                        y1=y1+datea1.charAt(l);
                        y2=y2+datef1.charAt(l); }
                    for(int l=5;l<7;l++){
                        m1=m1+datea1.charAt(l);
                        m2=m2+datef1.charAt(l); }
                    for(int l=8;l<10;l++){
                        j1=j1+datea1.charAt(l);
                        j2=j2+datef1.charAt(l); }
                    
                    System.out.println(""+y1);
                    System.out.println(""+y2);
                    System.out.println(""+m1);
                    System.out.println(""+m2);
                     System.out.println(""+j1);
                    System.out.println(""+j2);
                       int yy1 = Integer.parseInt(y1);
                       int yy2 = Integer.parseInt(y2);
                       int mm1 = Integer.parseInt(m1);
                       int mm2 = Integer.parseInt(m2);
                       int jj1 = Integer.parseInt(j1);
                       int jj2 = Integer.parseInt(j2);
                       if(yy1>yy2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       else {
                       if(yy1==yy2){
                           if(mm1==mm2){
                           if(jj1>jj2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else {
                               String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + nd + " , " + y+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+y+")";
                        st.executeUpdate(req1);
                           JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}
                           
                           
                           
                           } else
                           { if(mm1>mm2){JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                           else 
                           {
                               String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + nd + " , " + y+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+y+")";
                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);}}
                       } else {
                       if(mm1>mm2) 
                       {JOptionPane.showMessageDialog(null, "Erreur : date fin de fin doit etre suppérieur à la date de debut de demande","Erruer",JOptionPane.ERROR_MESSAGE);}
                       
                       
                       else {
                       String req1 = "insert into demande VALUES (" +id+ " , " + y + " , '" + d + "' , '" + d + "' , " + nd + " , " + y+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ","+y+")";
                        st.executeUpdate(req1);
                       JOptionPane.showMessageDialog(null, "Demande effuctué","information",JOptionPane.INFORMATION_MESSAGE);
                       }
                       
                       
                       }
                    
                       }
                
               

               // String req1 = "insert into demande VALUES (" +id+ " , " + null + " , " + null + " , " + null + " , " + nd + " , " + null+ " , '" + datea1 + "' , '" + datef1 + "' , " + j + " , '" + x + "' , '" + dis + "'," + m + ")";
                //String req2 = "INSERT INTO `demande`(`iddem`, `numsalle`, `datedebs`, `datefins`, `nbrdata`, `nbrpc`, `datedebm`, `datefinm`, `idindividu`, `email`, `dis`, `etat`) VALUES (59,100,\"2020-02-25\",\"2020-02-25\",0	,0,null,null,10,\"dfdfg\",\"hhh\",1)";

             // st.executeUpdate(req1);
               // JOptionPane.showMessageDialog(this, " Votre enregistrement a été fait");
                }}
                }
            
            
            
            
            }
            
            
            
            }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "yahay Séléction", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ajouterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterMouseEntered
        Border border = BorderFactory.createEtchedBorder(Color.white, Color.white);
        ajouter.setBorder(border);// TODO add your handling code here:
    }//GEN-LAST:event_ajouterMouseEntered

    private void ajouterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterMouseExited
        Border border = BorderFactory.createEmptyBorder();
        ajouter.setBorder(border);
        // TODO add your handling code here:
    }//GEN-LAST:event_ajouterMouseExited

    private void ajouterMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterMousePressed
        
        iduser = i.getText();
        if(iduser.equals("")){
         String m = JOptionPane.showInputDialog("Votre user Name SVP");
         modi = new modifieretatdemande(m);
        }
        else {
        modi = new modifieretatdemande(iduser,this.n,this.p,this.t);
        }
        this.dispose();
        modi.setVisible(true);
    }//GEN-LAST:event_ajouterMousePressed

    private void ajouter1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouter1MouseEntered

        Border border = BorderFactory.createEtchedBorder(Color.white, Color.white);
        ajouter1.setBorder(border);// TODO add your handling code here:
    }//GEN-LAST:event_ajouter1MouseEntered

    private void ajouter1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouter1MouseExited

        Border border = BorderFactory.createEmptyBorder();
        ajouter1.setBorder(border);// TODO add your handling code here:
    }//GEN-LAST:event_ajouter1MouseExited

    private void ajouter1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouter1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ajouter1MousePressed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
          
    
    }//GEN-LAST:event_c3ActionPerformed

    private void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed
       
    }//GEN-LAST:event_c4ActionPerformed

    private void ajouter2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouter2MouseEntered
Border border = BorderFactory.createEtchedBorder(Color.white, Color.white);
        ajouter2.setBorder(border);        // TODO add your handling code here:
    }//GEN-LAST:event_ajouter2MouseEntered

    private void ajouter2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouter2MouseExited
 Border border = BorderFactory.createEmptyBorder();
        ajouter2.setBorder(border);        // TODO add your handling code here:
    }//GEN-LAST:event_ajouter2MouseExited

    private void ajouter2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouter2MousePressed
 iduser = i.getText();
        if(iduser.equals("")){
         String m = JOptionPane.showInputDialog("Votre user Name SVP");
         cons = new consulterdem(m,this.n,this.p,this.t);
        }
        else {
        cons = new consulterdem(iduser,this.n,this.p,this.t);
        }
        this.dispose();
        cons.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_ajouter2MousePressed

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
       int ll=0;
        try {
            rs4=st.executeQuery("select idindividu from individu where nomind='"+t4.getText()+"' and prenomind='"+t5.getText()+"'");
            while(rs4.next()){
             ll=rs4.getInt(1);
              i.setText(""+ll);    
             }
        } catch (SQLException ex) {
            
        }
             
                // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MousePressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        LOGIN s=new LOGIN();
        this.dispose();
        s.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        WindowEvent wc=new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wc);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        MENU m;        // TODO add your handling code here:
        m = new MENU(this.n,this.p,this.t);
        this.dispose();
        m.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

    }//GEN-LAST:event_jMenu2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gererdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gererdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gererdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gererdemande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gererdemande().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ajouter;
    private javax.swing.JLabel ajouter1;
    private javax.swing.JLabel ajouter2;
    private javax.swing.JCheckBox c1;
    private javax.swing.JCheckBox c2;
    private javax.swing.JCheckBox c3;
    private javax.swing.JCheckBox c4;
    private com.toedter.calendar.JDateChooser d1;
    private com.toedter.calendar.JDateChooser d2;
    private com.toedter.calendar.JDateChooser d3;
    private com.toedter.calendar.JDateChooser d4;
    private javax.swing.JTextArea f;
    private javax.swing.JTextField i;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    private javax.swing.JTextField t3;
    private javax.swing.JTextField t4;
    private javax.swing.JTextField t5;
    private javax.swing.JTextField t6;
    private javax.swing.JTextField t7;
    // End of variables declaration//GEN-END:variables
}
