/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sia;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Winsido
 */
public class gerer extends javax.swing.JFrame {
SeConnecter c=new SeConnecter();
DefaultTableModel model=new DefaultTableModel();
DefaultTableModel model1=new DefaultTableModel();
ResultSet rs,rs1,rs2;
Statement st;
String id,nss,cap,n,p;
int tt ;
modifiersalle modi;
    /**
     * Creates new form gerer
     */
    public gerer(String n, String p, int tt) {
        initComponents();
        this.setSize(1340, 820);
        this.setResizable(false);
        this.n=n;
        this.p=p;
        this.tt=tt;
     
        this.setLocationRelativeTo(null);
        model.addColumn("numsalle");
        model.addColumn("nomsalle");
        model.addColumn("capacité");
        model.addColumn("dispo");
        
        model1.addColumn("Nom");
        model1.addColumn("prenom");
        model1.addColumn("type");
        
          try {
            st=c.obtenirCon().createStatement();
            rs=st.executeQuery("select* from salle");
              
            while(rs.next()){model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});}
            jTable1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur Séléction","Erreur",JOptionPane.ERROR_MESSAGE);
        }
           
        
  
    }

    gerer() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
     public void Actualiser(){
    model.setRowCount(0);
    try {
            
            rs=st.executeQuery("select*from salle");
            while(rs.next()){model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4)});}
            jTable1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreyr Séléction","Erreur",JOptionPane.ERROR_MESSAGE);}
}
      
 
 
            
 
 
 
 
 
 
 
 
 
 
 
 
     

 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        supprimer = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ajouter = new javax.swing.JLabel();
        modifier = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        c1 = new javax.swing.JComboBox<>();
        p2 = new javax.swing.JPanel();
        d1 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        p1 = new javax.swing.JPanel();
        t = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sia/edubase.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(480, 40, 370, 70);

        jPanel2.setBackground(new java.awt.Color(0, 94, 166));
        jPanel2.setLayout(null);

        supprimer.setFont(new java.awt.Font("Impact", 2, 18)); // NOI18N
        supprimer.setForeground(new java.awt.Color(255, 255, 255));
        supprimer.setText("                 Supperimer salle");
        supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                supprimerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                supprimerMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                supprimerMousePressed(evt);
            }
        });
        jPanel2.add(supprimer);
        supprimer.setBounds(0, 460, 220, 40);

        jLabel6.setFont(new java.awt.Font("Impact", 2, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("         Gerer Salle");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel6MousePressed(evt);
            }
        });
        jPanel2.add(jLabel6);
        jLabel6.setBounds(0, 220, 220, 40);

        ajouter.setFont(new java.awt.Font("Impact", 2, 18)); // NOI18N
        ajouter.setForeground(new java.awt.Color(255, 255, 255));
        ajouter.setText("                  Ajouter salle");
        ajouter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ajouterMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ajouterMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ajouterMousePressed(evt);
            }
        });
        jPanel2.add(ajouter);
        ajouter.setBounds(0, 300, 220, 40);

        modifier.setFont(new java.awt.Font("Impact", 2, 18)); // NOI18N
        modifier.setForeground(new java.awt.Color(255, 255, 255));
        modifier.setText("                 Modifier salle");
        modifier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modifierMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                modifierMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                modifierMousePressed(evt);
            }
        });
        jPanel2.add(modifier);
        modifier.setBounds(0, 370, 220, 40);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 220, 820);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(310, 330, 1000, 360);

        jButton1.setBackground(new java.awt.Color(0, 94, 166));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Chercher");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1220, 240, 110, 40);

        c1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salle disponible pour", "touts les personnes qui ont reservé la salle", "motif de reservation", "periode de reservation" }));
        c1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                c1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                c1MouseExited(evt);
            }
        });
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        jPanel1.add(c1);
        c1.setBounds(240, 240, 270, 40);

        p2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel5.setText("date");

        javax.swing.GroupLayout p2Layout = new javax.swing.GroupLayout(p2);
        p2.setLayout(p2Layout);
        p2Layout.setHorizontalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p2Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        p2Layout.setVerticalGroup(
            p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(p2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(p2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel1.add(p2);
        p2.setBounds(860, 210, 350, 100);

        p1.setBackground(new java.awt.Color(255, 255, 255));

        t.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        t.setForeground(new java.awt.Color(225, 231, 235));
        t.setText("Veillez saisir le num de la salle ");
        t.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tMousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel4.setText("Num salle");

        javax.swing.GroupLayout p1Layout = new javax.swing.GroupLayout(p1);
        p1.setLayout(p1Layout);
        p1Layout.setHorizontalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        p1Layout.setVerticalGroup(
            p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, p1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(p1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        jPanel1.add(p1);
        p1.setBounds(530, 210, 320, 100);

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 94, 166));
        jLabel3.setText("GESTION DES SALLES");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(540, 120, 310, 50);

        jMenu1.setText("Log out");

        jMenuItem1.setText("Déconnexion");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Quitté");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("page Menu");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void supprimerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supprimerMousePressed
      supprimersalle supp = new supprimersalle(this.n,this.p,this.tt);
      this.dispose();
      supp.setVisible(true);
    }//GEN-LAST:event_supprimerMousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
       /*
        if(dispo.isSelected() ){
        try {
        
            
        rs=st.executeQuery("select * from salle where nomsalle='"+t.getText()+"'");
            
          
            int ns ,c;
            String nms,x ="";
            boolean dis;
            while(rs.next()){
                 ns=rs.getInt("numsalle");
                 nms=rs.getString("nomsalle");
                 c=rs.getInt("capacité");
                 dis=rs.getBoolean("dispo");
                salle s=new salle(ns,nms,c,dis);
                if(s.dispo) {x=" est Disponible";} else {x="n'est pas disponibles";}
                JOptionPane.showMessageDialog(null, "la salle "+nms+"  "+x,"INFO",JOptionPane.INFORMATION_MESSAGE);
            
            }
            
            
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreyr Séléction","Erreur",JOptionPane.ERROR_MESSAGE);} 
        } else{System.out.println("sia.gerer.jButton1MousePressed()");}
        */
       /*if( occ.isSelected() && motif.isSelected() ){
        try {
        int i =Integer.parseInt(t.getText());
        rs=st.executeQuery("SELECT salle.nomsalle,salle.dispo , individu.nomind , individu.prenomind ,motif.LibelleMotif from  salle, reservation , motif , individu  where salle.numsalle=reservation.numsalle and reservation.idindividu=individu.idindividu and reservation.codemotif=motif.codemotif AND salle.numsalle="+i);
            
          
            
            String nms="",nomp="",prenomp="",mot="",x ="";
            boolean dis;
            while(rs.next()){
                 
                 nms=rs.getString("nomsalle");
                 nomp=rs.getString("individu.nomind");
                 prenomp=rs.getString("individu.prenomind");
                 mot=rs.getString("motif.LibelleMotif");
                 dis=rs.getBoolean("salle.dispo");
               
                
            }
              if(nms.equals("") || nomp.equals("") || prenomp.equals("") || mot.equals("")){x=" la salle "+nms+"est disponible";}
                 else  {
                 salle s=new salle(i);
                 s.MAJdispo();
                 //il manque changer la disponibilité sur la BD ndirha f fonction salle
                 x="la salle "+nms+" est occupé par "+nomp+" "+prenomp+" pour "+mot;
                 }
                JOptionPane.showMessageDialog(null, x,"INFO",JOptionPane.INFORMATION_MESSAGE);
            
            
            
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreyr Séléction","Erreur",JOptionPane.ERROR_MESSAGE);} 
        } else{ if(dispo.isSelected() ){
        try {
        
            
        rs=st.executeQuery("select * from salle where nomsalle='"+t.getText()+"'");
            
          
            int ns=0 ,c=0;
            String nms="",x ="";
            boolean dis=true;
            while(rs.next()){
                 ns=rs.getInt("numsalle");
                 nms=rs.getString("nomsalle");
                 c=rs.getInt("capacité");
                 dis=rs.getBoolean("dispo");
               
            
            }
            
             salle s=new salle(ns,nms,c,dis);
                if(s.dispo) {x=" est Disponible";} else {x="n'est pas disponibles";}
                JOptionPane.showMessageDialog(null, "la salle "+nms+"  "+x,"INFO",JOptionPane.INFORMATION_MESSAGE);
            
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreyr Séléction","Erreur",JOptionPane.ERROR_MESSAGE);} 
        } else{System.out.println("sia.gerer.jButton1MousePressed()");}}*/
       

    }//GEN-LAST:event_jButton1MousePressed

    private void tMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tMousePressed
t.setText("");
t.setForeground(Color.black);// TODO add your handling code here:
    }//GEN-LAST:event_tMousePressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        id= (String) model.getValueAt(jTable1.getSelectedRow(),0);
             nss= (String) model.getValueAt(jTable1.getSelectedRow(),1);
             cap= (String) model.getValueAt(jTable1.getSelectedRow(),2);
             System.out.println(" "+id+" "+nss+" "+cap);
            modi=new modifiersalle(id,nss,cap,this.n,this.p,this.tt);
        
      // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jLabel6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MousePressed

    private void ajouterMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterMousePressed
ajoutersalle ajou = new ajoutersalle(this.n,this.p,this.tt);
this.dispose();
ajou.setVisible(true);
    }//GEN-LAST:event_ajouterMousePressed

    private void modifierMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierMousePressed
this.dispose();
        
modi.setVisible(true);
    }//GEN-LAST:event_modifierMousePressed

    private void ajouterMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterMouseEntered
Border border = BorderFactory.createEtchedBorder(Color.white, Color.white);
ajouter.setBorder(border);// TODO add your handling code here:
    }//GEN-LAST:event_ajouterMouseEntered

    private void ajouterMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ajouterMouseExited
Border border = BorderFactory.createEmptyBorder();
ajouter.setBorder(border);
// TODO add your handling code here:
    }//GEN-LAST:event_ajouterMouseExited

    private void modifierMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierMouseEntered
Border border = BorderFactory.createEtchedBorder(Color.white, Color.white);
modifier.setBorder(border);        // TODO add your handling code here:
    }//GEN-LAST:event_modifierMouseEntered

    private void supprimerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supprimerMouseEntered
Border border = BorderFactory.createEtchedBorder(Color.white, Color.white);
supprimer.setBorder(border);        // TODO add your handling code here:
    }//GEN-LAST:event_supprimerMouseEntered

    private void modifierMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifierMouseExited
Border border = BorderFactory.createEmptyBorder();
modifier.setBorder(border);        // TODO add your handling code here:
    }//GEN-LAST:event_modifierMouseExited

    private void supprimerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supprimerMouseExited
Border border = BorderFactory.createEmptyBorder();
supprimer.setBorder(border);        // TODO add your handling code here:
    }//GEN-LAST:event_supprimerMouseExited

    private void c1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseEntered
c1.showPopup();        // TODO add your handling code here:
    }//GEN-LAST:event_c1MouseEntered

    private void c1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseExited
c1.hidePopup();       // TODO add your handling code here:
    }//GEN-LAST:event_c1MouseExited

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
int i=0;
      String x=c1.getSelectedItem().toString();
         if(x.equals("Salle disponible pour")){i=1;}
                else {if(x.equals("touts les personnes qui ont reservé la salle")) { i=2;}
                else { if(x.equals("motif de reservation")){i=3;}
                else {if(x.equals("periode de reservation")) {i=4;}
                }}
                
                } 
         System.out.println("sia.gerer.c1ActionPerformed()"+i);
         if(i==1){p1.setVisible(true);
                   p2.setVisible(true); }
         if(i==2){p1.setVisible(true);
                   p2.setVisible(false); }
         if(i==3){p1.setVisible(true);
                   p2.setVisible(false); }
         if(i==4){p1.setVisible(true);
                   p2.setVisible(false); }
         /*
         Salle disponible pour
touts les personnes qui ont reservé la salle
motif de reservation
periode de reservation
         */// TODO add your handling code here:
    }//GEN-LAST:event_c1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
            int k=0;
      String x=c1.getSelectedItem().toString();
      if(x.equals("Salle disponible pour")){k=1;}
                else {if(x.equals("touts les personnes qui ont reservé la salle")) { k=2;}
                else { if(x.equals("motif de reservation")){k=3;}
                else {if(x.equals("periode de reservation")) {k=4;}
                }}
                
                }
      //debut1 
      if(k==1){
          try {
            int i=Integer.parseInt(t.getText());
            SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
            String datea=sdf.format(d1.getDate());
            System.out.println("sia.gerer.jButton2ActionPerformed()");
            String test="";
     //SELECT reservation.idreservation from reservation WHERE numsalle=2 and reservation.dateDebut<="2020-04-20" and reservation.datefin>="2020-04-20"
     rs=st.executeQuery("SELECT reservation.idreservation from reservation WHERE numsalle="+i+" AND reservation.dateDebut <='"+datea+"' and reservation.datefin>='"+datea+"'");
            //rs=st.executeQuery("select salle.dispo from salle where salle.numsalle NOT IN (SELECT reservation.numsalle from reservation where reservation.dateDebut<=' "+datea+ "' , reservation.datefin>=' "+datea+"' ,salle.numsalle= "+i+")"); 
          while(rs.next()){
          test=rs.getString(1);
          } 
          if(test.equals("")){
              System.out.println("la salle est disponible le "+datea);
              JOptionPane.showMessageDialog(null, "la salle est disponible le "+datea,"INFO",JOptionPane.INFORMATION_MESSAGE);
          }
          else {
              System.out.println("la salle n'est disponible le "+datea);
              JOptionPane.showMessageDialog(null, "la salle n'est pas disponible le "+datea,"INFO",JOptionPane.INFORMATION_MESSAGE);
          
          }
          } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreyr Séléction","Erreur",JOptionPane.ERROR_MESSAGE);} 
      }
      //fin 1 
      //debut 2 
      if(k==2){
       try {
        int i=Integer.parseInt(t.getText());
        
            System.out.println("sia.gerer.jButton2ActionPerformed()");
            rs=st.executeQuery("SELECT individu.nomind , individu.prenomind , typeindividu.typeindividu from individu JOIN typeindividu on individu.idtypeindividu=typeindividu.idtypeindividu WHERE individu.idtypeindividu NOT IN (SELECT reservation.idreservation FROM reservation where reservation.numsalle="+i+")");
            model.addColumn("Nom");
            model.addColumn("prenom");
            model.addColumn("type");
        
            while(rs.next()){model1.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3)});}
            jTable1.setModel(model1);
          } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreyr Séléction","Erreur",JOptionPane.ERROR_MESSAGE);} 
      }
      //fin 2 
      //debut 3 
      if(k==3){
       try {
             int j=4,i=Integer.parseInt(t.getText());
             rs1=st.executeQuery("select * from salle where numsalle = "+i);
             
             while(rs1.next()){
             j=rs1.getInt("dispo");}
             
             if(j==1){JOptionPane.showMessageDialog(null, "la salle est disponible","INFO",JOptionPane.INFORMATION_MESSAGE);}
             else {
                 rs=st.executeQuery("SELECT LibelleMotif FROM motif join reservation on motif.codemotif= reservation.codemotif join salle on reservation.numsalle= salle.numsalle where salle.numsalle="+i);
            while(rs.next()) {
                
                JOptionPane.showMessageDialog(null, "la salle est prise pour "+rs.getString("LibelleMotif"),"INFO",JOptionPane.INFORMATION_MESSAGE);
            }
             }
             
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Erreur Séléction","Erreur",JOptionPane.ERROR_MESSAGE);
        }
      }
      //fin 3 
      //debut 4 
      if(k==4){
      try {
             int j=4,i=Integer.parseInt(t.getText());
             rs1=st.executeQuery("select * from salle where numsalle = "+i);
             while(rs1.next()){
             j=rs1.getInt("dispo");}
             
             if(j==1){JOptionPane.showMessageDialog(null, "la salle est disponible","INFO",JOptionPane.INFORMATION_MESSAGE);}
             else {
                 rs=st.executeQuery("SELECT datefin-dateDebut as periode FROM  reservation  where numsalle="+i);
            while(rs.next()) {
                
                JOptionPane.showMessageDialog(null, "la salle est prise pour  "+(rs.getInt("periode")+1)+" jour","INFO",JOptionPane.INFORMATION_MESSAGE);
            }
             }
             
        } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "wsh kayen Séléction","Erreur",JOptionPane.ERROR_MESSAGE);
        }        
      }
      //fin 4
       }
         catch(Exception e ){}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
MENU m;        // TODO add your handling code here:
    m = new MENU(this.n,this.p,this.tt);
    this.dispose();
    m.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
LOGIN s=new LOGIN(); 
this.dispose();
s.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
WindowEvent wc=new WindowEvent(this,WindowEvent.WINDOW_CLOSING);    
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wc);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gerer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gerer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gerer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gerer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gerer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ajouter;
    private javax.swing.JComboBox<String> c1;
    private com.toedter.calendar.JDateChooser d1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel modifier;
    private javax.swing.JPanel p1;
    private javax.swing.JPanel p2;
    private javax.swing.JLabel supprimer;
    private javax.swing.JTextField t;
    // End of variables declaration//GEN-END:variables
}
